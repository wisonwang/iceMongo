# **********************************************************************
#
# Copyright (c) 2003-2015 ZeroC, Inc. All rights reserved.
#
# This copy of Ice is licensed to you under the terms described in the
# ICE_LICENSE file included in this distribution.
#
# **********************************************************************
#
# Ice version 3.6.1
#
# <auto-generated>
#
# Generated from file `exceptions.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

import Ice, IcePy

# Start of module Base
_M_Base = Ice.openModule('Base')
__name__ = 'Base'

if 'BaseException' not in _M_Base.__dict__:
    _M_Base.BaseException = Ice.createTempClass()
    class BaseException(Ice.UserException):
        def __init__(self, message='', errorCode=0, promot=''):
            self.message = message
            self.errorCode = errorCode
            self.promot = promot

        def __str__(self):
            return IcePy.stringifyException(self)

        __repr__ = __str__

        _ice_name = 'Base::BaseException'

    _M_Base._t_BaseException = IcePy.defineException('::Base::BaseException', BaseException, (), False, None, (
        ('message', (), IcePy._t_string, False, 0),
        ('errorCode', (), IcePy._t_int, False, 0),
        ('promot', (), IcePy._t_string, False, 0)
    ))
    BaseException._ice_type = _M_Base._t_BaseException

    _M_Base.BaseException = BaseException
    del BaseException

# End of module Base
